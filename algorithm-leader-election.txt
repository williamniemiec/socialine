myPid = getpid()
idx = backupsList.indexOf(Server(backupIp, backupPort))
nextIdx = (idx+1) % backupsList.size()
leader = -1
participant = false

# First round 
receivedPid = receive()    # timeout 2seg - se n receber, continua a execução 
                            (significa q é o primeiro a começar)

if (timeout)
    receivedPid = -1

if (receivedPid < myPid):
    leader = myPid
    send(MSG_ELECTION, myPid, nextIdx)
else if (!participant):
    participant = true
    send(MSG_ELECTION, receivedPid, nextIdx)
else if (receivedPid == myPid):
    print "I, " + myPid + ", AM THE LEADER!!!"

    # Second round
    send(MSG_ELECTED, myPid, nextIdx)

leader = receive()
sleep(5000)     # Espera por 5 segundos para que todos os processos
                # do anel recebam uma mensagem

if (myPid == leader):
    print "I AM PRIMARY :D ! HAHAHAH"
else:
    print "I'M BACKUP AGAIN ;("


receive():
    buffer = read("backupIp:backupPort")

    if (buffer[0] == MSG_ELECTION):
        return buffer[1..2]
    else if (buffer[0] == MSG_ELECTED):
        return buffer[1..2]
    else
        return -1
